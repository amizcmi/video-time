name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送v开头的tag时触发
  workflow_dispatch:  # 添加手动触发支持
    inputs:
      version:
        description: '版本号 (例如: v0.3)'
        required: true
        default: 'v0.3'
      prerelease:
        description: '是否为预发布版本'
        type: boolean
        required: false
        default: false

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller opencv-python
        
    - name: Build with PyInstaller
      run: |
        pyinstaller --noconfirm ^
            --windowed ^
            --name "VideoTimeViewer_${{ github.event.inputs.version || github.ref_name }}" ^
            --clean ^
            --icon=vticon.ico ^
            --add-binary "opencv_videoio_ffmpeg*.dll;." ^
            --hidden-import cv2 ^
            --hidden-import numpy ^
            --collect-all cv2 ^
            --onefile ^
            video_duration.py
        
    - name: Create Release ZIP
      run: |
        cd dist
        7z a -tzip "../视频时长查看器_${{ github.event.inputs.version || github.ref_name }}.zip" "VideoTimeViewer_${{ github.event.inputs.version || github.ref_name }}.exe"
      
    - name: Create Release
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "${{ github.event.inputs.version || github.ref_name }}" --title "视频时长查看器 ${{ github.event.inputs.version || github.ref_name }}" --draft=false --prerelease=${{ github.event.inputs.prerelease || false }} "./视频时长查看器_${{ github.event.inputs.version || github.ref_name }}.zip"

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload to GitHub Packages
      uses: actions/upload-artifact@v4
      with:
        name: video-time-viewer-${{ github.event.inputs.version || github.ref_name }}
        path: 视频时长查看器_${{ github.event.inputs.version || github.ref_name }}.zip
        if-no-files-found: error

    - name: Publish to GitHub Packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # 创建包描述文件
        echo "{\"name\":\"video-time-viewer\",\"version\":\"${{ github.event.inputs.version || github.ref_name }}\",\"description\":\"视频时长查看器\"}" > package.json
        
        # 发布到 GitHub Packages
        gh api --method POST /user/packages/generic/video-time-viewer/${{ github.event.inputs.version || github.ref_name }}/video-time-viewer.zip --input "./视频时长查看器_${{ github.event.inputs.version || github.ref_name }}.zip"