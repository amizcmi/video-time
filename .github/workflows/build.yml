name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: v0.3)'
        required: true
        default: 'v0.3'
      prerelease:
        description: '是否为预发布版本'
        type: boolean
        required: false
        default: false

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller opencv-python
      
    - name: Generate version info
      id: version
      run: |
        echo "VERSION=${{ github.event.inputs.version || github.ref_name }}" >> $GITHUB_ENV
        echo "BUILD_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      shell: bash
        
    - name: Build with PyInstaller
      shell: cmd
      run: |
        pyinstaller --noconfirm --windowed --name "VideoTimeViewer_${{ env.VERSION }}" --clean --icon=vticon.ico --add-binary "opencv_videoio_ffmpeg*.dll;." --hidden-import cv2 --hidden-import numpy --collect-all cv2 --onefile video_duration.py
      
    - name: Verify Build
      shell: cmd
      run: |
        dir dist
        if not exist "dist\VideoTimeViewer_${{ env.VERSION }}.exe" (
          echo "Build failed: Executable not found"
          exit 1
        )
        
    - name: Create Release ZIP
      shell: cmd
      run: |
        cd dist
        7z a -tzip "../视频时长查看器_${{ env.VERSION }}.zip" "VideoTimeViewer_${{ env.VERSION }}.exe"
        cd ..
        dir "视频时长查看器_${{ env.VERSION }}.zip"
      
    - name: Generate Release Notes
      id: release_notes
      run: |
        echo "## 视频时长查看器 ${{ env.VERSION }} (${{ env.BUILD_DATE }})" > release_notes.md
        echo "" >> release_notes.md
        echo "### 更新内容：" >> release_notes.md
        echo "- 优化 Material Design 界面风格" >> release_notes.md
        echo "- 添加版本号显示" >> release_notes.md
        echo "- 改进打包发布流程" >> release_notes.md
        echo "- 优化用户体验" >> release_notes.md
        echo "" >> release_notes.md
        echo "### 安装说明：" >> release_notes.md
        echo "1. 下载并解压 ZIP 文件" >> release_notes.md
        echo "2. 运行 VideoTimeViewer.exe" >> release_notes.md
      shell: bash

    - name: Create Release
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "${{ env.VERSION }}" --title "视频时长查看器 ${{ env.VERSION }}" --notes-file release_notes.md --draft=false --prerelease=${{ github.event.inputs.prerelease || false }} "./视频时长查看器_${{ env.VERSION }}.zip"

    - name: Upload to GitHub Packages
      uses: actions/upload-artifact@v4
      with:
        name: video-time-viewer-${{ env.VERSION }}
        path: 视频时长查看器_${{ env.VERSION }}.zip
        if-no-files-found: error
        retention-days: 90

    - name: Publish to GitHub Packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "{\"name\":\"video-time-viewer\",\"version\":\"${{ env.VERSION }}\",\"description\":\"视频时长查看器\",\"repository\":\"${{ github.repository }}\",\"build_date\":\"${{ env.BUILD_DATE }}\"}" > package.json
        gh api --method POST /user/packages/generic/video-time-viewer/${{ env.VERSION }}/video-time-viewer.zip --input "./视频时长查看器_${{ env.VERSION }}.zip"

    - name: Upload Build Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          *.log
          *.spec
        if-no-files-found: ignore
